# This file contains a configuration snippet for a dual mcu config
# printer using the raspberry pi i2c for reading a BME280 sensor

# See example.cfg and example-extras.cfg for a description of
# available parameters.

# Stub for printer configuration, replace as appropriate for your setup.
[printer]
kinematics: none
max_velocity: 300
max_accel: 1200

# Stub for primary mcu configuration, replace as appropriate for your setup.
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_290037000851363131343032-if00

# Secondary mcu config for raspberry pi.
# Build firmware with `make menuconfig` using:
#   Micro-controller Architecture (Linux process)
# Use `install-raspi-host-mcu.sh` to install startup script
# and `make flash` to install resulting "firmware"
[mcu raspi_host]
serial: /tmp/klipper_host_mcu

# BME280 configuration as in example-extras.cfg with bus and mcu configured.
# i2c must be enabled via `sudo raspi-config` and then reboot your raspi
# GPIO pins for i2c.1 bus
# 3.3v: pin 1, 17
# SDA: pin 3
# SCL: pin 5
# GND: pin 6, 9, 14, 20, 25, 30, 34, 39
[temperature_sensor bme]
sensor_type: BME280
i2c_address: 118
i2c_bus: i2c.1
i2c_mcu: raspi_host

[gcode_macro QUERY_BME280]
default_parameter_SENSOR: bme280 bme
gcode:
    {printer.gcode.action_respond_info(
    "Temperature: %.2f C\n"
    "Pressure: %.2f hPa\n"
    "Humidity: %.2f%%" % (
    printer[SENSOR].temperature,
    printer[SENSOR].pressure,
    printer[SENSOR].humidity))}